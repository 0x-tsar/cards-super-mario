import Head from "next/head";
import Image from "next/image";
import { useContext, useEffect, useState } from "react";
import styles from "../../styles/Home.module.css";
import { AuthContext } from "../context/contexto";
import styled from "styled-components";
import Header from "../components/Header";
import Left from "../components/Left";
import Main from "../components/Main";

import { connectEthereum } from "../ethereum";
import { id } from "ethers/lib/utils";

// export const Container = styled.div`
//   display: grid;
//   grid-template-columns: 100px 200px;
//   grid-template-rows: 80px calc(100vh - 80px);
//   grid-template-areas:
//     "header header"
//     "left main"
// `;

export const Container = styled.div`
  display: grid;
  grid-template-columns: 300px calc(100vw - 300px);
  grid-template-rows: 70px calc(100vh - 70px);
  grid-template-areas:
    "header header"
    "left main";
  overflow-x: hidden;
`;

export default function Home() {
  const { data } = useContext(AuthContext);
  const [cards, setCards] = useState([]);

  useEffect(() => {
    const done = async () => {
      const { account, card3 } = await connectEthereum();
      console.log(account);
      console.log(card3);

      const balance = Number(await card3.balanceOf(account));
      console.log(`total balance: ${balance}`);

      for (let i = 0; i < balance; i++) {
        const tokenRealId = Number(await card3.tokenOfOwnerByIndex(account, i));
        // const token = await card3.tokenByIndex(tokenRealId);
        const tokenURI = await card3.tokenURI(tokenRealId);
        // console.log(tokenURI);
        // setCards((cards) => ({ ...cards, tokenURI }));
        setCards((cards) => [...cards, tokenURI]);
      }

      //
    };
    done();
  }, []);

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <title>Cards</title>
      </Head>

      <Header></Header>
      <Left></Left>
      <Main cards={cards}></Main>
    </Container>
  );
}
